<?phpnamespace Nemundo\Core\Time;use Nemundo\Core\Base\AbstractBase;use Nemundo\Core\Type\Number\Number;class Second extends AbstractBase{    /**     * @var     */    private $second;    public function __construct($second)    {        $this->second = $second;    }    public function getHourMinute()    {        $hours = intval($this->second / 3600);        $minutes = (new Number($this->getMinute() - ($hours * 60)))->getFormatWithLeadingZero(2);        $value = $hours . ':' . $minutes;        return $value;    }    public function getMinute()    {        $minute = intval(floor(($this->second / 60)));        return $minute;    }    public function getMinuteSecond()    {        $second = intval($this->second) % 60;        $value = $this->getMinute() . ':' . (new Number($second))->getFormatWithLeadingZero(2);        return $value;    }    public function getText()    {        $value = '';        if ($this->second < 60) {            $value = round($this->second, 2) . ' sec';        } else {            if ($this->getMinute() < 60) {                $value = $this->getMinuteSecond() . ' min';            } else {                $value = $this->getHourMinute() . ' hour';            }        }        return $value;    }}