<?phpnamespace Nemundo\Core\Base\DataSource;use Nemundo\Core\Base\AbstractBaseClass;abstract class AbstractDataSource extends AbstractBaseClass{    /**     * @var bool     */    public $reverse = false;    protected $loaded = false;    protected $list = [];    /**     * @var int     */    protected $totalCount;    public function __construct()    {        $this->loadSource();    }    abstract protected function loadData();    protected function loadSource()    {    }    /**     * @return array     */    public function getData()    {        if (!$this->loaded) {            $this->loadData();            if ($this->reverse) {                $this->list = array_reverse($this->list);            }            $this->loaded = true;        }        return $this->list;    }    /**     * @return int     */    public function getCount()    {        $this->getData();        $count = sizeof($this->list);        return $count;    }    public function getTotalCount()    {        $count = $this->getCount();        return $count;    }    /**     * @return bool     */    public function hasItems()    {        $returnValue = false;        if ($this->getCount() > 0) {            $returnValue = true;        }        return $returnValue;    }    public function isEmpty()    {        $returnValue = false;        if ($this->getCount() == 0) {            $returnValue = true;        }        return $returnValue;    }    protected function addItem($item)    {        $this->list[] = $item;        return $this;    }    protected function clearList()    {        $this->list = [];        return $this;    }}