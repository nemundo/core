<?phpnamespace Nemundo\Core\Xml\Reader;use Nemundo\Core\Base\DataSource\AbstractDataSource;use Nemundo\Core\Debug\Debug;use Nemundo\Core\Http\Response\StatusCode;use Nemundo\Core\WebRequest\Curl\CurlWebRequest;abstract class AbstractXmlReader extends AbstractDataSource{    public function __construct()    {        parent::__construct();        libxml_use_internal_errors(true);    }    protected function fromText($xmlText)    {        $simpleXml = @simplexml_load_string($xmlText);        $this->fromSimpleXml($simpleXml);        return $this;    }    protected function fromFilename($filename)    {        $simpleXml = @simplexml_load_file($filename);        $this->fromSimpleXml($simpleXml);        return $this;    }    public function fromUrl($url)    {        $request = new CurlWebRequest();        $response = $request->getUrl($url);        if ($response->statusCode == StatusCode::OK) {            $this->fromText($response->html);        } else {            (new Debug())->write($response);        }        return $this;    }    private function fromSimpleXml($simpleXml)    {        if ($simpleXml) {            $json = json_encode($simpleXml);            $xmlNew = json_decode($json, true);            $this->addItem($xmlNew);        } else {            foreach (libxml_get_errors() as $error) {                (new Debug())->write('Xml Error: ' . $error->message);            }        }    }    protected function loadData()    {    }}