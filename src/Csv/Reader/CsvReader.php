<?phpnamespace Nemundo\Core\Csv\Reader;use Nemundo\Core\Csv\CsvSeperator;use Nemundo\Core\Text\Utf8Converter;class CsvReader extends AbstractCsvReader{    /**     * @var CsvSeperator     */    public $separator = CsvSeperator::SEMICOLON;    /**     * @var int     */    public $limit;    /**     * @return CsvRow[]     */    public function getData()    {        return parent::getData();    }    protected function loadData()    {        if (!$this->checkProperty('filename')) {            return;        }        if ($this->checkFileExists()) {            $file = fopen($this->filename, 'r');            $count = 0;            while (($line = fgetcsv($file, 0, $this->separator)) !== false) {                if ($count >= $this->lineOfStart) {                    $data = [];                    foreach ($line as $item) {                        if ($item !== null) {                            if ($this->utf8Encode) {                                $item = (new Utf8Converter())->utf8Encode($item);                            }                            $item = trim($item);                            $item = trim($item, '"');                            $item = trim($item, 'ï»¿"');                        }                        $data[] = $item;                    }                    if ($this->useFirstRowAsHeader) {                        if ($count == $this->lineOfStart) {                            $this->header = $data;                        } else {                            $dataNew = [];                            $rowCount = 0;                            foreach ($this->header as $rowHeader) {                                if (isset($data[$rowCount])) {                                    $dataNew[trim($rowHeader)] = $data[$rowCount];                                } else {                                    $dataNew[trim($rowHeader)] = '';                                }                                $rowCount++;                            }                            $csvRow = new CsvRow($dataNew);                            $this->addItem($csvRow);                        }                    } else {                        $this->addItem(new CsvRow($data));                    }                }                $count++;                if ($this->limit !== null) {                    if ($count > $this->limit) {                        return;                    }                }            }            fclose($file);        }    }}